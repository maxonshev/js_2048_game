{"version":3,"sources":["scripts/main.js"],"names":["startButton","document","querySelector","score","size","gameData","Array","initializeGame","i","j","generateNewNumber","innerHTML","row","Math","floor","random","col","randomNumber","updateUI","isGameOver","gameOver","moveLeft","oldGrid","map","slideAndMerge","reverse","every","num","moveRight","moveUp","arr","push","moveDown","filter","val","missing","length","zeros","fill","concat","a","b","table","cell","rows","cells","innerText","className","checkGameOver","canMove","board","addEventListener","textContent","classList","remove","add","style","display","evt","key"],"mappings":";AAAA,aA0QC,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAxQD,IAAMA,EAAcC,SAASC,cAAc,UACvCC,EAAQ,EAENC,EAAO,EACPC,EAAW,IAAIC,MAAMF,GAE3B,SAASG,IACF,IAAA,IAAIC,EAAI,EAAGA,EAAIJ,EAAMI,IAAK,CAC7BH,EAASG,GAAK,IAAIF,MAAMF,GAEnB,IAAA,IAAIK,EAAI,EAAGA,EAAIL,EAAMK,IACxBJ,EAASG,GAAGC,GAAK,EAIrBN,EAAQ,EACRO,IACAA,IAEyBT,SAASC,cAAc,sBAE/BS,UAAY,GAG/B,SAASD,IACA,OAAM,CACLE,IAAAA,EAAMC,KAAKC,MAAMD,KAAKE,SAAWX,GACjCY,EAAMH,KAAKC,MAAMD,KAAKE,SAAWX,GAEnCC,GAAuB,IAAvBA,EAASO,GAAKI,GAAY,CACtBC,IAAAA,EAAeJ,KAAKE,SAAW,GAAM,EAAI,EAE/CV,EAASO,GAAKI,GAAOC,EACrBC,IACA,MAGEC,GAAAA,IACF,OAKN,SAASA,IAGF,IAFDC,IAAAA,GAAW,EAENZ,EAAI,EAAGA,EAAIJ,EAAMI,IACnB,IAAA,IAAIC,EAAI,EAAGA,EAAIL,EAAMK,IACD,IAAnBJ,EAASG,GAAGC,KACdW,GAAW,GAKVA,OAAAA,EAqBT,SAASC,IAGF,IAFCC,IAAAA,EAAUjB,EAASkB,IAAI,SAAAX,GAAWA,OAAAA,EAAAA,KAE/BJ,EAAI,EAAGA,EAAIJ,EAAMI,IACxBH,EAASG,GAAKgB,EAAcnB,EAASG,GAAGiB,WAAWA,WAGpCpB,EAASqB,MAAM,SAACd,EAAKJ,GACpCI,OAAAA,EAAIc,MAAM,SAACC,EAAKlB,GAAMkB,OAAAA,IAAQL,EAAQd,GAAGC,SAIzCC,IACAQ,KAIJ,SAASU,IAGF,IAFCN,IAAAA,EAAUjB,EAASkB,IAAI,SAAAX,GAAWA,OAAAA,EAAAA,KAE/BJ,EAAI,EAAGA,EAAIJ,EAAMI,IACxBH,EAASG,GAAKgB,EAAcnB,EAASG,KAGtBH,EAASqB,MAAM,SAACd,EAAKJ,GACpCI,OAAAA,EAAIc,MAAM,SAACC,EAAKlB,GAAMkB,OAAAA,IAAQL,EAAQd,GAAGC,SAIzCC,IACAQ,KAIJ,SAASW,IAGF,IAFCP,IAAAA,EAAUjB,EAASkB,IAAI,SAAAX,GAAWA,OAAAA,EAAAA,KAE/BJ,EAAI,EAAGA,EAAIJ,EAAMI,IAAK,CAGxB,IAFDsB,IAAAA,EAAM,GAEDrB,EAAI,EAAGA,EAAIL,EAAMK,IACxBqB,EAAIC,KAAK1B,EAASI,GAAGD,IAGvBsB,EAAMN,EAAcM,EAAIL,WAAWA,UAE9B,IAAA,IAAIhB,EAAI,EAAGA,EAAIL,EAAMK,IACxBJ,EAASI,GAAGD,GAAKsB,EAAIrB,IAIRJ,EAASqB,MAAM,SAACd,EAAKJ,GACpCI,OAAAA,EAAIc,MAAM,SAACC,EAAKlB,GAAMkB,OAAAA,IAAQL,EAAQd,GAAGC,SAIzCC,IACAQ,KAIJ,SAASc,IAGF,IAFCV,IAAAA,EAAUjB,EAASkB,IAAI,SAAAX,GAAWA,OAAAA,EAAAA,KAE/BJ,EAAI,EAAGA,EAAIJ,EAAMI,IAAK,CAGxB,IAFDsB,IAAAA,EAAM,GAEDrB,EAAI,EAAGA,EAAIL,EAAMK,IACxBqB,EAAIC,KAAK1B,EAASI,GAAGD,IAGvBsB,EAAMN,EAAcM,GAEf,IAAA,IAAIrB,EAAI,EAAGA,EAAIL,EAAMK,IACxBJ,EAASI,GAAGD,GAAKsB,EAAIrB,IAIRJ,EAASqB,MAAM,SAACd,EAAKJ,GACpCI,OAAAA,EAAIc,MAAM,SAACC,EAAKlB,GAAMkB,OAAAA,IAAQL,EAAQd,GAAGC,SAIzCC,IACAQ,KAIJ,SAASM,EAAcZ,GACjBkB,IAAAA,EAAMlB,EAAIqB,OAAO,SAAAC,GAAOA,OAAAA,IACxBC,EAAU/B,EAAO0B,EAAIM,OACrBC,EAAQ/B,MAAM6B,GAASG,KAAK,GAEhCR,EAAMO,EAAME,OAAOT,GAEd,IAAA,IAAIrB,EAAIL,EAAO,EAAGK,EAAI,EAAGA,IAAK,CAC3B+B,IAAAA,EAAIV,EAAIrB,GACRgC,EAAIX,EAAIrB,EAAI,GAEd+B,IAAMC,IACRX,EAAIrB,GAAK+B,EAAIC,EACbtC,GAAS2B,EAAIrB,GACbqB,EAAIrB,EAAI,GAAK,GASVqB,OALPA,EAAMA,EAAIG,OAAO,SAAAC,GAAOA,OAAAA,IACxBC,EAAU/B,EAAO0B,EAAIM,OAErBN,GADAO,EAAQ/B,MAAM6B,GAASG,KAAK,IAChBC,OAAOT,GAsBrB,SAASZ,IAGF,IAFCwB,IAAAA,EAAQzC,SAASC,cAAc,eAE5BM,EAAI,EAAGA,EAAIJ,EAAMI,IACnB,IAAA,IAAIC,EAAI,EAAGA,EAAIL,EAAMK,IAAK,CACvBkC,IAAAA,EAAOD,EAAME,KAAKpC,GAAGqC,MAAMpC,GAK7BJ,GAHJsC,EAAKG,UAA+B,IAAnBzC,EAASG,GAAGC,GAAW,GAAKJ,EAASG,GAAGC,GACzDkC,EAAKI,UAAY,0BAA4B1C,EAASG,GAAGC,GAElC,OAAnBJ,EAASG,GAAGC,GACWR,SAASC,cAAc,sBAE/BS,UAAjB,mGAQNV,SAASC,cAAc,eAAe4C,UAAY3C,EAClD6C,IAGF,SAASC,EAAQC,GACV,IAAA,IAAI1C,EAAI,EAAGA,EAAI0C,EAAMd,OAAQ5B,IAC3B,IAAA,IAAIC,EAAI,EAAGA,EAAIyC,EAAM1C,GAAG4B,OAAQ3B,IAC/ByC,GAAgB,IAAhBA,EAAM1C,GAAGC,GACJ,OAAA,EAKR,IAAA,IAAID,EAAI,EAAGA,EAAI0C,EAAMd,OAAQ5B,IAC3B,IAAA,IAAIC,EAAI,EAAGA,EAAIyC,EAAM1C,GAAG4B,OAAQ3B,IAAK,CACpCA,GAAAA,EAAIyC,EAAM1C,GAAG4B,OAAS,GAAKc,EAAM1C,GAAGC,KAAOyC,EAAM1C,GAAGC,EAAI,GACnD,OAAA,EAGLD,GAAAA,EAAI0C,EAAMd,OAAS,GAAKc,EAAM1C,GAAGC,KAAOyC,EAAM1C,EAAI,GAAGC,GAChD,OAAA,EAKN,OAAA,EAGT,SAASuC,IACFC,EAAQ5C,KACcJ,SAASC,cAAc,sBAE/BS,UAAjB,qEA1MJX,EAAYmD,iBAAiB,QAAS,WACpC5C,IACAW,IACAlB,EAAYoD,YAAc,UAC1BpD,EAAYqD,UAAUC,OAAO,SAC7BtD,EAAYqD,UAAUE,IAAI,WAELtD,SAASC,cAAc,kBAE/BsD,MAAMC,QAAU,OAEzBtC,MACFnB,EAAYoD,YAAc,QAC1BpD,EAAYqD,UAAUC,OAAO,WAC7BtD,EAAYqD,UAAUE,IAAI,YAsH9BtD,SAASkD,iBAAiB,UAAW,SAASO,GACpCA,OAAAA,EAAIC,KACL,IAAA,UACH9B,IACA,MACG,IAAA,YACHG,IACA,MACG,IAAA,YACHX,IACA,MACG,IAAA,aACHO","file":"main.9e47fc2a.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst startButton = document.querySelector('.start');\nlet score = 0;\n\nconst size = 4;\nconst gameData = new Array(size);\n\nfunction initializeGame() {\n  for (let i = 0; i < size; i++) {\n    gameData[i] = new Array(size);\n\n    for (let j = 0; j < size; j++) {\n      gameData[i][j] = 0;\n    }\n  }\n\n  score = 0;\n  generateNewNumber();\n  generateNewNumber();\n\n  const messageContainer = document.querySelector('.message-container');\n\n  messageContainer.innerHTML = '';\n}\n\nfunction generateNewNumber() {\n  while (true) {\n    const row = Math.floor(Math.random() * size);\n    const col = Math.floor(Math.random() * size);\n\n    if (gameData[row][col] === 0) {\n      const randomNumber = Math.random() < 0.1 ? 4 : 2;\n\n      gameData[row][col] = randomNumber;\n      updateUI();\n      break;\n    }\n\n    if (isGameOver()) {\n      break;\n    }\n  }\n}\n\nfunction isGameOver() {\n  let gameOver = true;\n\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      if (gameData[i][j] === 0) {\n        gameOver = false;\n      }\n    }\n  }\n\n  return gameOver;\n}\n\nstartButton.addEventListener('click', () => {\n  initializeGame();\n  updateUI();\n  startButton.textContent = 'Restart';\n  startButton.classList.remove('start');\n  startButton.classList.add('restart');\n\n  const messageStart = document.querySelector('.message-start');\n\n  messageStart.style.display = 'none';\n\n  if (isGameOver()) {\n    startButton.textContent = 'Start';\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n  }\n});\n\nfunction moveLeft() {\n  const oldGrid = gameData.map(row => [...row]);\n\n  for (let i = 0; i < size; i++) {\n    gameData[i] = slideAndMerge(gameData[i].reverse()).reverse();\n  }\n\n  const changed = !gameData.every((row, i) =>\n    row.every((num, j) => num === oldGrid[i][j])\n  );\n\n  if (changed) {\n    generateNewNumber();\n    updateUI();\n  }\n}\n\nfunction moveRight() {\n  const oldGrid = gameData.map(row => [...row]);\n\n  for (let i = 0; i < size; i++) {\n    gameData[i] = slideAndMerge(gameData[i]);\n  }\n\n  const changed = !gameData.every((row, i) =>\n    row.every((num, j) => num === oldGrid[i][j])\n  );\n\n  if (changed) {\n    generateNewNumber();\n    updateUI();\n  }\n}\n\nfunction moveUp() {\n  const oldGrid = gameData.map(row => [...row]);\n\n  for (let i = 0; i < size; i++) {\n    let arr = [];\n\n    for (let j = 0; j < size; j++) {\n      arr.push(gameData[j][i]);\n    }\n\n    arr = slideAndMerge(arr.reverse()).reverse();\n\n    for (let j = 0; j < size; j++) {\n      gameData[j][i] = arr[j];\n    }\n  }\n\n  const changed = !gameData.every((row, i) =>\n    row.every((num, j) => num === oldGrid[i][j])\n  );\n\n  if (changed) {\n    generateNewNumber();\n    updateUI();\n  }\n}\n\nfunction moveDown() {\n  const oldGrid = gameData.map(row => [...row]);\n\n  for (let i = 0; i < size; i++) {\n    let arr = [];\n\n    for (let j = 0; j < size; j++) {\n      arr.push(gameData[j][i]);\n    }\n\n    arr = slideAndMerge(arr);\n\n    for (let j = 0; j < size; j++) {\n      gameData[j][i] = arr[j];\n    }\n  }\n\n  const changed = !gameData.every((row, i) =>\n    row.every((num, j) => num === oldGrid[i][j])\n  );\n\n  if (changed) {\n    generateNewNumber();\n    updateUI();\n  }\n}\n\nfunction slideAndMerge(row) {\n  let arr = row.filter(val => val);\n  let missing = size - arr.length;\n  let zeros = Array(missing).fill(0);\n\n  arr = zeros.concat(arr);\n\n  for (let j = size - 1; j > 0; j--) {\n    const a = arr[j];\n    const b = arr[j - 1];\n\n    if (a === b) {\n      arr[j] = a + b;\n      score += arr[j];\n      arr[j - 1] = 0;\n    }\n  }\n\n  arr = arr.filter(val => val);\n  missing = size - arr.length;\n  zeros = Array(missing).fill(0);\n  arr = zeros.concat(arr);\n\n  return arr;\n}\n\ndocument.addEventListener('keydown', function(evt) {\n  switch (evt.key) {\n    case 'ArrowUp':\n      moveUp();\n      break;\n    case 'ArrowDown':\n      moveDown();\n      break;\n    case 'ArrowLeft':\n      moveLeft();\n      break;\n    case 'ArrowRight':\n      moveRight();\n      break;\n  }\n});\n\nfunction updateUI() {\n  const table = document.querySelector('.game-field');\n\n  for (let i = 0; i < size; i++) {\n    for (let j = 0; j < size; j++) {\n      const cell = table.rows[i].cells[j];\n\n      cell.innerText = gameData[i][j] === 0 ? '' : gameData[i][j];\n      cell.className = 'field-cell field-cell--' + gameData[i][j];\n\n      if (gameData[i][j] === 2048) {\n        const messageContainer = document.querySelector('.message-container');\n\n        messageContainer.innerHTML = `\n        <p class=\"message message-win\">\n          Winner! Congrats! You did it!\n        </p>`;\n      }\n    }\n  }\n\n  document.querySelector('.game-score').innerText = score;\n  checkGameOver();\n}\n\nfunction canMove(board) {\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      if (board[i][j] === 0) {\n        return true;\n      }\n    }\n  }\n\n  for (let i = 0; i < board.length; i++) {\n    for (let j = 0; j < board[i].length; j++) {\n      if (j < board[i].length - 1 && board[i][j] === board[i][j + 1]) {\n        return true;\n      }\n\n      if (i < board.length - 1 && board[i][j] === board[i + 1][j]) {\n        return true;\n      }\n    }\n  }\n\n  return false;\n}\n\nfunction checkGameOver() {\n  if (!canMove(gameData)) {\n    const messageContainer = document.querySelector('.message-container');\n\n    messageContainer.innerHTML = `\n    <p class=\"message message-lose\">\n      Game Over\n    </p>`;\n  }\n}\n"]}